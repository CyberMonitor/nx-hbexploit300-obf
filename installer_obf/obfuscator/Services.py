import Variable
import ScrambledConstant

SERVICES = [
    'apm', 'apm:p', 'apm:sys', 'fgm', 'fgm:0', 'fgm:9',
    #'audin:a', 'audin:d', 'audin:u', 'audout:a', 'audout:d', 'audout:u', 'audren:a', 'audren:d', 'audren:u', 'audrec:a', 'audrec:d', 'audrec:u', 'audctl', 'codecctl', 'hwopus',
    #x 'bsd:u', 'bsd:s', 'bsdcfg', 'ethc:c', 'ethc:i', 'nsd:u', 'nsd:a', 'sfdnsres',
    'caps:a', 'caps:c',
    #'caps:sc', 'caps:ss', 'mm:u', 'vi:m', 'vi:s', 'vi:u', 'cec-mgr',
    #x 'friend:u', 'friend:v', 'friend:m', 'friend:s', 'friend:a',
    'fsp-srv', 'fsp-ldr', 'fsp-pr',
    #'nfc:am', 'nfc:mf:u', 'nfc:user', 'nfc:sys', 'nfp:user', 'nfp:dbg', 'nfp:sys',
    'lr', 'ncm',
    'nifm:u', 'nifm:a', 'nifm:s',
    #'nim', 'nim:shp', 'ntc',
    'nvdrv:a', 'nvdrv:s', 'nvdrv:t',
    'pctl', 'pctl:a', 'pctl:s', 'pctl:r',
    'pm:bm', 'pm:info', 'pm:shell',
    'ldr:ro', 'ro:dmnt',
    'usb:ds', 'usb:hs', 'usb:pd', 'usb:pd:c', 'usb:pm',
    'wlan:inf', 'wlan:lcl', 'wlan:lg', 'wlan:lga', 'wlan:sg', 'wlan:soc'
]

class Services:
    def __init__(self):
        self.var_name = Variable.alloc_name('srv')

    def generate(self):
        ret = ''

        ret += 'Service %s[%d];\n' % (self.var_name, len(SERVICES))

        for i, s in enumerate(SERVICES):
            ret += 'rc = smGetService(&%s[%d], "%s");\n' % (self.var_name, i, s)

        return ret

    def get_index(self, s):
        obf = ScrambledConstant.ScrambledConstant(SERVICES.index(s))
        return (obf.get_var_name(), obf)

    def get_handle(self, idx):
        return '%s[%s].handle' % (self.var_name, idx)
